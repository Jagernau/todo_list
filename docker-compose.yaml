version: "3.9"
networks:
  django:
    driver: bridge
      
services:
  
  postgres:
    image: postgres:latest
    restart: always
    env_file:
      - ./todolist/.env
    volumes:
      - pg_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: $${POSTGRES_USER}
      POSTGRES_PASSWORD: $${POSTGRES_PASSWORD}
      POSTGRES_DB: $${POSTGRES_DB}
    ports:
      - "5432:5432"
    networks:
      - django

    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5
      
      

  api:

    build:
      context: .
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - ./todolist/.env
    environment:
      POSTGRES_HOST: postgres
      SECRET_KEY: $${SECRET_KEY}
      DEBUG: $${DEBUG}
      POSTGRES_USER: $${POSTGRES_USER}
      POSTGRES_PASSWORD: $${POSTGRES_PASSWORD}
      POSTGRES_DB: $${POSTGRES_DB}
    ports:
      - "8000:8000"
    networks:
      - django


  front:
    image: sermalenk/skypro-front:lesson-38
    restart: always
    depends_on:
      - api
    ports:
    - "80:80"
    networks:
      - django



volumes:
  pg_data:


